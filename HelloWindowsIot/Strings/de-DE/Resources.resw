<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="FailedLoadPage" xml:space="preserve">
    <value>Seite konnte nicht geladen werden {0}</value>
  </data>
  <data name="txtSwitchSetWallpaper.Text" xml:space="preserve">
    <value>Tasks ausführen</value>
  </data>
  <data name="TitleLogs" xml:space="preserve">
    <value>Logs</value>
  </data>
  <data name="TitleSettings" xml:space="preserve">
    <value>Einstellungen</value>
  </data>
  <data name="TitleSupport" xml:space="preserve">
    <value>Support</value>
  </data>
  <data name="TitleTaskOverview" xml:space="preserve">
    <value>Aufgaben Übersicht</value>
  </data>
  <data name="txtBtnDelete.Text" xml:space="preserve">
    <value>Löschen</value>
  </data>
  <data name="txtBtnLoad.Text" xml:space="preserve">
    <value>Laden</value>
  </data>
  <data name="txtContactSupport.Text" xml:space="preserve">
    <value>Support kontaktieren</value>
  </data>
  <data name="txtContactSupportInfo.Text" xml:space="preserve">
    <value>Probleme? Fragen? Lob? Kritik? Schicken Sie mir eine E-Mail.</value>
  </data>
  <data name="txtDay" xml:space="preserve">
    <value>Tag</value>
  </data>
  <data name="txtDays" xml:space="preserve">
    <value>Tage</value>
  </data>
  <data name="txtHour" xml:space="preserve">
    <value>Stunde</value>
  </data>
  <data name="txtHours" xml:space="preserve">
    <value>Stunden</value>
  </data>
  <data name="txtInfoChangeWPTaskStatus.Text" xml:space="preserve">
    <value>Status der Aufgabe ChangeWallpaperTask. Klick auf den Button um das Hintergrundbild jetzt zu wechseln. </value>
  </data>
  <data name="txtInfoLogHeader.Text" xml:space="preserve">
    <value>Wichtige Hinweise und Fehler können hier angezeigt werden. Um weitere zusätzlichen informationen zu bekommen, aktivieren Sie Logging unter Einstellungen</value>
  </data>
  <data name="txtInfoOpenFolder.Text" xml:space="preserve">
    <value>Speicherort der App Datenbank (auf PC). Am Phone geht der Ordner mit den zuletzt benutzen Dateien auf. </value>
  </data>
  <data name="txtInfoPicTaskStatus.Text" xml:space="preserve">
    <value>Status der Aufgabe SearchPicturesTask. Klick auf den Button um die Aufgabe auszuführen. Die Datenbank wird dann neu befüllt. </value>
  </data>
  <data name="txtInfoServiceTaskStatus.Text" xml:space="preserve">
    <value>Status der Servicing Hintergrund Aufgabe. Wird ausgeführt wenn die App geupdatet wird.</value>
  </data>
  <data name="txtLogDate.Text" xml:space="preserve">
    <value>Log Datum</value>
  </data>
  <data name="txtLogDescription.Text" xml:space="preserve">
    <value>Beschreibung</value>
  </data>
  <data name="txtLogType.Text" xml:space="preserve">
    <value>Typ</value>
  </data>
  <data name="txtMinute" xml:space="preserve">
    <value>Minute</value>
  </data>
  <data name="txtMinutes" xml:space="preserve">
    <value>Minuten</value>
  </data>
  <data name="txtRating.Text" xml:space="preserve">
    <value>Bewertung schreiben</value>
  </data>
  <data name="txtRatingInfo.Text" xml:space="preserve">
    <value>Gute Bewertungen und Kritik ermutigen mich Updates zu Programmieren und Bereitzustellen. Möchten Sie die App nun Bewerten und kritisieren?</value>
  </data>
  <data name="txtTimeIntervalForChangeWallpaper.Text" xml:space="preserve">
    <value>Interval für Hintergrund wechsel</value>
  </data>
  <data name="txtTimeIntervalForPicSearch.Text" xml:space="preserve">
    <value>Interval für Bilder Suche</value>
  </data>
  <data name="txtWeek" xml:space="preserve">
    <value>Woche</value>
  </data>
  <data name="TitleStartPage" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="txtChangeWPNow.Text" xml:space="preserve">
    <value>Hintergrundbild wechseln</value>
  </data>
  <data name="txtChangeWPNowInfo.Text" xml:space="preserve">
    <value>Klicken um das Hintergrundbild jetzt zu wechseln.</value>
  </data>
  <data name="txtSearchPicsNow.Text" xml:space="preserve">
    <value>Bilder Datenbank füllen</value>
  </data>
  <data name="txtSearchPicsNowInfo.Text" xml:space="preserve">
    <value>Klick um jetzt nach neuen Bildern zu suchen und die Bild Datenbank zu aktualisieren.</value>
  </data>
  <data name="txtChangeWallpaperNow" xml:space="preserve">
    <value>Hintergrundbild wechseln</value>
  </data>
  <data name="ChangeWPOverviewTitle.Text" xml:space="preserve">
    <value>Bilder wechseln</value>
  </data>
  <data name="OpenFolderOverviewTitle.Text" xml:space="preserve">
    <value>Verzeichnis öffnen</value>
  </data>
  <data name="SearchPicOverviewTitle.Text" xml:space="preserve">
    <value>Bilder Suchen</value>
  </data>
  <data name="ServiceOverviewTitle.Text" xml:space="preserve">
    <value>Service</value>
  </data>
  <data name="txtLastRun" xml:space="preserve">
    <value>Zuletzt ausgeführt:</value>
  </data>
  <data name="TitlePictureFilter" xml:space="preserve">
    <value>Bilder Filter</value>
  </data>
  <data name="AdditionalAttribute" xml:space="preserve">
    <value>Zusätzliches Merkmal</value>
  </data>
  <data name="CurrentWallPaperPic" xml:space="preserve">
    <value>Aktuelles Hintergrundbild</value>
  </data>
  <data name="Filterproperties" xml:space="preserve">
    <value>Filter Eigenschaften</value>
  </data>
  <data name="ImageNotSetByApp" xml:space="preserve">
    <value>wurde nicht von dieser App geändert</value>
  </data>
  <data name="NumberOfPicsSaved" xml:space="preserve">
    <value>Anzahl gespeicherter Bilder</value>
  </data>
  <data name="txtVirtualFolders.Text" xml:space="preserve">
    <value>Zusätzliches Merkmal</value>
  </data>
  <data name="AlreadyPurchased" xml:space="preserve">
    <value>App wurde bereits gekauft und Vollversion Lizenz ist vorhanden</value>
  </data>
  <data name="emptyPicDatabase" xml:space="preserve">
    <value>Die BilderDatenbank ist Leer. Bitte erst Bild Filter setzen und Datenbank füllen.</value>
  </data>
  <data name="errRetrievingLicence" xml:space="preserve">
    <value>Ein Fehler ist bei der Lizenz Ermittlung aufgetreten.</value>
  </data>
  <data name="foundPictures" xml:space="preserve">
    <value>Es wurden {0} Bilder gefunden.</value>
  </data>
  <data name="fullLicence1" xml:space="preserve">
    <value>Vollversion wird gekauft ... </value>
  </data>
  <data name="fullLicence2" xml:space="preserve">
    <value>Kauf fehlgeschlagen</value>
  </data>
  <data name="fullVersion" xml:space="preserve">
    <value>Vollversion</value>
  </data>
  <data name="hello" xml:space="preserve">
    <value>Hallo</value>
  </data>
  <data name="inactiveLicence" xml:space="preserve">
    <value>Inaktive Lizenz</value>
  </data>
  <data name="NetworkError" xml:space="preserve">
    <value>Produkt konnte wegen eines Netzwerkfehler nicht gekauft werden.</value>
  </data>
  <data name="NotPurchased" xml:space="preserve">
    <value>Produkt wurde nicht gekauft. Evtl. wurde der Vorgang abgebrochen</value>
  </data>
  <data name="ServerError" xml:space="preserve">
    <value>Produkt konnte wegen eines Server Fehler nicht gekauft werden</value>
  </data>
  <data name="supportRequest" xml:space="preserve">
    <value>Support Anfrage für </value>
  </data>
  <data name="trialVersion" xml:space="preserve">
    <value>Testversion</value>
  </data>
  <data name="txtTrialPeriodInformation1" xml:space="preserve">
    <value>Die Testversion kann noch für {0} Tage verwendet werden.</value>
  </data>
  <data name="txtTrialPeriodInformation2" xml:space="preserve">
    <value>Vollversion ist vorhanden.</value>
  </data>
  <data name="txtTrialPeriodInformation3" xml:space="preserve">
    <value>Keine Vollversion vorhanden. Testevrsion kann nicht ermittelt werden. </value>
  </data>
  <data name="UnknownError" xml:space="preserve">
    <value>Produkt konnte wegen eines unbekannten Fehler nicht gekauft werden</value>
  </data>
  <data name="GroupByAlbum" xml:space="preserve">
    <value>Nach Album Gruppieren</value>
  </data>
  <data name="GroupByAlbumArtist" xml:space="preserve">
    <value>Nach Album Artist Gruppieren</value>
  </data>
  <data name="GroupByArtist" xml:space="preserve">
    <value>Nach Artist Gruppieren</value>
  </data>
  <data name="GroupByAuthor" xml:space="preserve">
    <value>Nach Author Gruppieren</value>
  </data>
  <data name="GroupByComposer" xml:space="preserve">
    <value>Nach Composer Gruppieren</value>
  </data>
  <data name="GroupByGenre" xml:space="preserve">
    <value>Nach genre Gruppieren</value>
  </data>
  <data name="GroupByMonth" xml:space="preserve">
    <value>Nach Monat Gruppieren</value>
  </data>
  <data name="GroupByPublishedYear" xml:space="preserve">
    <value>Nach veröffentlichungsjahr Gruppieren</value>
  </data>
  <data name="GroupByRating" xml:space="preserve">
    <value>Nach Bewertung Gruppieren</value>
  </data>
  <data name="GroupByTag" xml:space="preserve">
    <value>Nach Markierung / Tag Gruppieren</value>
  </data>
  <data name="GroupByType" xml:space="preserve">
    <value>Nach Typ Gruppieren</value>
  </data>
  <data name="GroupByYear" xml:space="preserve">
    <value>Nach Jahr Gruppieren</value>
  </data>
  <data name="GroupDefaultQuery" xml:space="preserve">
    <value>Standard Filter</value>
  </data>
  <data name="txtCommonFolderQueryList.Text" xml:space="preserve">
    <value>Bilder Gruppieren nach</value>
  </data>
  <data name="txtbuyFullVersion.Text" xml:space="preserve">
    <value>Aktuelle Lizenz:</value>
  </data>
  <data name="gotopictext" xml:space="preserve">
    <value>Speicherort aufrufen</value>
  </data>
</root>